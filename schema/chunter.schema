%% -*- erlang -*-

%% @doc Memory reserved on the hypervisor.
{mapping, "reserved_memory", "chunter.reserved_memory",
 [{default, "0MB"},
  {datatype, bytesize}]}.

%% @doc Size of the chunks for uploading to the s3 storage.
{mapping, "s3_upload_chunk_size", "chunter.upload_chunk",
 [{default, "5MB"},
  {datatype, bytesize}]}.

%% @doc Initial number of paralel uploads to s3.
{mapping, "parallel_uploads", "fifo_s3.upload_pool_size",
 [{default, 5},
  {level, advanced},
  {datatype, integer}]}.

{mapping, "parallel_uploads", "fifo_s3.upload_pool_size",
 [{default, 5},
  {datatype, integer}]}.

%% @doc Maximal number of paralel uploads to s3.
{mapping, "max_paralell_uploads", "fifo_s3.upload_pool_max",
 [{default, 10},
  {datatype, integer}]}.

%% @doc Number of chunks to prefreth.
{mapping, "preload", "fifo_s3.download_preload_chunks",
 [{default, 2},
  {datatype, integer}]}.

%% @doc Size of the chunks for downloading fomr the s3 storage.
{mapping, "s3_download_chunk_size", "chunter.download_chunk",
 [{default, "5MB"},
  {datatype, bytesize}]}.

%% @doc Initial number of paralel downloads from s3.
{mapping, "paralell_downloads", "fifo_s3.download_pool_size",
 [{default, 5},
  {datatype, integer}]}.

%% @doc Maximal number of paralel downloads from s3.
{mapping, "max_paralell_downloads", "fifo_s3.download_pool_max",
 [{default, 10},
  {datatype, integer}]}.

%% @doc NSQ endpoint to send messages to, right now performance metrics
%% and service changes
%% changes are noted even when the state is the same at least for the nsq
%% logging.

{mapping, "nsq_producer", "chunter.nsq_producer",
 [{commented, {"127.0.0.1", 4150}},
  {datatype, ip}]}.

%% @doc Configures weather kstat should be used to perform periodic
%% performance measurements on zones and the hypervisor.

{mapping, "kstat.metrics", "chunter.kstat_metrics",
 [{default, enabled},
  {datatype, {enum, [enabled, disabled]}}]}.

{translation,
 "chunter.kstat_arc",
 fun(Conf) ->
         case cuttlefish:conf_get("kstat.arc", Conf) of
             enabled ->
                 true;
             disabled ->
                 false
         end
 end
}.

%% @doc Enables or disables the ARC stats for this server.

{mapping, "kstat.arc", "chunter.kstat_arc",
 [{default, enabled},
  {datatype, {enum, [enabled, disabled]}}]}.

%% @doc The interval services for a zone are checked, the default is 10s
%% changes are noted even when the state is the same at least for the nsq
%% logging.
{mapping, "update_services_interval", "chunter.update_services_interval",
 [{default, "10s"},
  {datatype, {duration, ms}}]}.

%% @doc The interval the ZFS snapshots are checked this should not be too fast
%% since it will increase load. The default is every 15 minutes. This also does
%% not change too often so increasing it does not make too much sense.
{mapping, "snapshot_update_interval", "chunter.snapshot_update_interval",
 [{default, "15m"},
  {datatype, {duration, ms}}]}.

%% @doc The interval the zones are checked for their state, this means running
%% `zoneadm list -ip` on the node. This is only required if a change is missed
%% due to some hickup but it ensures that the state of zones is always up to
%% date.
%% Generally the more often this happen the less are the chances a state is
%% misrepresented but the higher is the load on the system.
%% This operation is fairly inexpensive.
{mapping, "zonemon_interval", "chunter.zonemon_interval",
 [{default, "1s"},
  {datatype, {duration, ms}}]}.


%% @doc The interval in which the zpool is checked for degrated disks. This
%% is a more expensive opperation so should be executed not too frequently,
%% generaly a interval of 15s means that worst case a degraded pool stays
%% undetected for 15s.
{mapping, "zpool_interval", "chunter.zpool_interval",
 [{default, "15s"},
  {datatype, {duration, ms}}]}.


%% @doc The interval in which the systems ARC status is checked, this is
%% purely informational and slowly changing a higher interval is usually
%% not a issue.
{mapping, "arc_interval", "chunter.arc_interval",
 [{default, "30s"},
  {datatype, {duration, ms}}]}.


%% @doc The port And IP chunter does listen on, usually it will be
%% auto detected as the first network iterface in the system, if it still
%% needs to be changed it can be done here.
{mapping, "ip", "chunter.endpoint",
 [{commented, {"127.0.0.1", 4200}},
  {datatype, ip}]}.

{translation,
 "mdns_client_lib.interface",
 fun(Conf) ->
         case cuttlefish:conf_get("ip", Conf) of
             {IP, _Port} ->
                 [A, B, C, D] = [list_to_integer(O) ||
                                    O <- re:split(IP, "\\.", [{return, list}])],
                 {ok, {A, B, C, D}};
             _ ->
                 undefined
         end
 end
}.
