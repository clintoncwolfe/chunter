{erl_opts, [{parse_transform, lager_transform},
            %% warnings_as_errors,
            debug_info]}.
{edoc_opts, [{dir, "../../doc"}]}.
{cover_enabled, true}.
{eunit_opts, [{report,{eunit_surefire,[{dir,"."}]}}]}.
{deps,
 [
  {lager, "2.1.1"},
  {fifo_lager, ".*", {git, "https://github.com/project-fifo/fifo_lager.git", {tag, "0.1.1"}}},
  {bugsnag, ".*", {git, "https://github.com/project-fifo/bugsnag-erlang.git", {tag, "0.1.0"}}},
  {cuttlefish, ".*", {git, "https://github.com/tsloughter/cuttlefish.git", {branch, "develop"}}},

  {jsx, "1.4.5"},
  {erlsom, ".*", {git, "https://github.com/willemdj/erlsom.git", {ref, "bc48604f7a74440da66aa7dba95a3bf634fdf138"}}},
  {ranch, "1.1.0"},
  {uuid, ".*", {git, "https://github.com/project-fifo/erlang-uuid.git", {tag, "0.4.7"}}},
  {erltrace, "0.1.4"},
  jsxd,
  fifo_utils,
  {fifo_s3, "0.1.*", {git, "https://github.com/project-fifo/fifo_s3.git", {tag, "0.1.13"}}},
  {libsniffle, "0.3.*", {git, "https://github.com/project-fifo/libsniffle.git", {tag, "0.3.32"}}},
  {libsnarl, "0.3.*", {git, "https://github.com/project-fifo/libsnarl.git", {tag, "0.3.36"}}},
  {libhowl, "0.3.*", {git, "https://github.com/project-fifo/libhowl.git", {tag, "0.1.30"}}},
  {fifo_dt, "0.1.*", {git, "https://github.com/project-fifo/fifo_dt.git", {tag, "0.1.58"}}},
  {fifo_spec, "0.1.*", {git, "https://github.com/project-fifo/fifo_spec.git", {tag, "0.1.24"}}},
  smurf,
  eper,
  recon
 ]}.

{plugins,
 [pc,
  {rebar3_cuttlefish, ".*", {git, "git://github.com/tsloughter/rebar3_cuttlefish.git", {branch, "master"}}}
 ]}.

{overrides,
 [
  %% R18
  {override, mdns_client_lib,
   [{erl_opts, [debug_info, {parse_transform, lager_transform}]}]},
  {override, eper,
   [{erl_opts, [debug_info]}]},
  {override, pooler,
   [{erl_opts,
     [{platform_define, "^[0-9]+", namespaced_types},
      debug_info,
      inline]}]}]}.

{profiles,
 [
  {prod, [{relx, [{dev_mode, false}]}]},
  {lint,  [{plugins, [{rebar3_lint, {git, "https://github.com/project-fifo/rebar3_lint.git", {tag, "0.1.2"}}}]}]}
 ]}.

{provider_hooks,
 [{post, [{release, cuttlefish}]}]}.

{relx,
 [{release, {"chunter", "0.7.1"},
   [
    sasl,
    chunter,
    {cuttlefish, load},
    {recon, load},
    {eper, load}
   ]},
  {semver, ""},
  {dev_mode, true},
  {include_erts, true},
  {generate_start_script, false},
  {overlay_vars, "rel/vars.config"},
  {overlay,
   [{copy, "rel/files/erl", "erts-\{\{erts_vsn\}\}/bin/erl"},
    {copy, "rel/files/nodetool", "erts-\{\{erts_vsn\}\}/bin/nodetool"},
    %% for some reason this is only in default
    {copy, "_build/default/bin/cuttlefish", "bin/cuttlefish"},

    {copy, "share", "share"},
    {copy, "_build/default/lib/fifo_utils/priv/update_config.sh", "share/"},
    {template, "schema/chunter.schema", "share/schema/00-chunter.schema"},
    {template, "_build/default/lib/bugsnag/priv/bugsnag.schema", "share/schema/01-bugsnag.schema"},
    {template, "_build/default/lib/libsnarl/priv/libsnarl.schema", "share/schema/02-libsnarl.schema"},
    {template, "_build/default/lib/mdns_client_lib/priv/mdns_client.schema", "share/schema/03-mdns_client.schema"},
    {template, "_build/default/lib/fifo_lager/priv/lager.schema", "share/schema/04-lager.schema"},
    {template, "schema/erlang_vm.schema", "share/schema/05-vm.schema"},
    {template, "rel/files/chunter", "bin/chunter"},
    {template, "rel/files/update", "bin/update"},
    {template, "rel/files/chunter.version", "etc/chunter.version"},
    {copy, "LICENSE", "LICENSE"},
    {copy, "README.md", "README.md"}]}]}.

%% Cuttlefish filename
{cuttlefish_filename, "chunter.conf.example"}.
{elvis,
 [#{dirs => ["apps/*/src"],
    filter => "*.erl",
    rules => [{elvis_style, line_length,
               #{ignore => [],
                 limit => 80,
                 skip_comments => false}},
              {elvis_style, no_tabs},
              {elvis_style, no_trailing_whitespace},
              {elvis_style, macro_names,
               #{ignore => [sniffle_snmp_handler]}},
              %% We disable this since it's used in the consoles a lot
              %% and makes sense there, I think...
              %% {elvis_style, macro_module_names},
              {elvis_style, operator_spaces, #{rules => [{right, ","},
                                                         {right, "++"},
                                                         {left, "++"}]}},
              {elvis_style, nesting_level, #{level => 3}},
              {elvis_style, god_modules,
               #{limit => 25,
                 ignore => [chunter_vm_fsm]}},
              {elvis_style, no_if_expression},
              {elvis_style, invalid_dynamic_call,
               #{ignore => [chunter_protocol,
                            ezdoor_behaviour]}},
              {elvis_style, used_ignored_variable},
              {elvis_style, no_behavior_info},
              {
                elvis_style,
                module_naming_convention,
                #{regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$",
                  ignore => []}
              },
              {
                elvis_style,
                function_naming_convention,
                #{regex => "^([a-z][a-z0-9]*_?)*$"}
              },
              {elvis_style, state_record_and_type},
              {elvis_style, no_spec_with_records},
              {elvis_style, dont_repeat_yourself, #{min_complexity => 11}},
              {elvis_style, no_debug_call,
               #{ignore => [
                           ]}}
             ]
   },
  #{dirs => ["."],
    filter => "Makefile",
    rules => [{elvis_project, no_deps_master_erlang_mk, #{ignore => []}},
              {elvis_project, protocol_for_deps_erlang_mk, #{ignore => []}}]
   },
  #{dirs => ["."],
    filter => "rebar.config",
    %% on the test branch master deps are OK
    rules => [%{elvis_project, no_deps_master_rebar, #{ignore => []}},
              {elvis_project, protocol_for_deps_rebar, #{ignore => []}}]
   },
  #{dirs => ["."],
    filter => "elvis.config",
    rules => [{elvis_project, old_configuration_format}]
   }
 ]
}.
